
version: '3.4'

services:

  nginx:
    container_name: nginx
    image: nginxinc/nginx-unprivileged:${DOCKER_IMAGE_TAG_NGINX}
    ports:
      - '8080:80'
      - '8443:443'
    secrets:
      - source: ssl_certificate
        target: /etc/nginx/${SERVER_CERTIFICATE}
        uid: '101'
        gid: '0'
        mode: 0444
      - source: ssl_certificate_key
        target: /etc/nginx/${SERVER_CERTIFICATE_KEY}
        uid: '101'
        gid: '0'
        mode: 0400
    configs:
      - source: nginx_default_conf_placeholder
        target: /tmp/default.conf.placeholder
        uid: '101'
        gid: '0'
        mode: 0444
      - source: nginx_envsubst_default_conf_placeholder_sh
        target: /docker-entrypoint.d/envsubst_default_conf_placeholder.sh
        uid: '0'
        gid: '0'
        mode: 0555
      - source: nginx_index_html
        target: /usr/share/nginx/html/index.html
        uid: '0'
        gid: '0'
        mode: 0444
    environment:
      - GITLAB_SUBDOMAIN_NAME=${GITLAB_SUBDOMAIN_NAME}
      - DEVOPS_DOMAIN_NAME=${DEVOPS_DOMAIN_NAME}
      - GITLAB_CONVEYED_WEB_PORT=${GITLAB_CONVEYED_WEB_PORT}
      - SERVER_CERTIFICATE=${SERVER_CERTIFICATE}
      - SERVER_CERTIFICATE_KEY=${SERVER_CERTIFICATE_KEY}
    networks:
      - nginx-gitlab
    restart: always
    depends_on:
      gitlab:
        condition: service_started # service_started | service_healthy

  gitlab:
    container_name: gitlab
    image: gitlab/gitlab-ce:${DOCKER_IMAGE_TAG_GITLAB}
    hostname: '${GITLAB_SUBDOMAIN_NAME}.${DEVOPS_DOMAIN_NAME}'
    ports:
      - '2222:22'
    expose:
      - '80'
      - '443'
    secrets:
      - source: gitlab_initial_root_password
        target: initial_root_password
        uid: '0'
        gid: '0'
        mode: 0400
      - source: gitlab_postgres_password
        target: postgres_password
        uid: '0'
        gid: '0'
        mode: 0400
    configs:
      - source: gitlab_gitlab_rb_placeholder
        target: /tmp/gitlab.rb.placeholder
        uid: '0'
        gid: '0'
        mode: 0400
      - source: gitlab_pre_reconfigure_script_sh
        target: /tmp/pre_reconfigure_script.sh
        uid: '0'
        gid: '0'
        mode: 0555
      - source: gitlab_post_reconfigure_script_sh
        target: /tmp/post_reconfigure_script.sh
        uid: '0'
        gid: '0'
        mode: 0555
#    volumes:
#      - type: bind
#        source: '${GITLAB_HOME}/config'
#        target: '/etc/gitlab'
#      - type: bind
#        source: '${GITLAB_HOME}/logs'
#        target: '/var/log/gitlab'
#      - type: bind
#        source: '${GITLAB_HOME}/data'
#        target: '/var/opt/gitlab'
    environment:
      GITLAB_CONVEYED_WEB_PORT: ${GITLAB_CONVEYED_WEB_PORT}
      GITLAB_CONVEYED_SSH_PORT: ${GITLAB_CONVEYED_SSH_PORT}
      GITLAB_PRE_RECONFIGURE_SCRIPT: /tmp/pre_reconfigure_script.sh
      GITLAB_POST_RECONFIGURE_SCRIPT: /tmp/post_reconfigure_script.sh
      GITLAB_LOG_LEVEL: 'WARN'
      GITLAB_SKIP_TAIL_LOGS: 'true'
      GITLAB_OMNIBUS_CONFIG: "from_file('/omnibus_config.rb')"
    networks:
      - nginx-gitlab
      - gitlab-postgres
    shm_size: '256m' # shared memory size
    healthcheck:
      test: [ "CMD-SHELL", "/opt/gitlab/bin/gitlab-healthcheck --fail --max-time 10" ]
      interval: 1m0s
      timeout: 30s
      retries: 5
      start_period: 0s
#    restart: always
    depends_on:
      - postgres_gitlab

#  gitlab-runner:
#    container_name: gitlab-runner
#    image: gitlab/gitlab-runner:${DOCKER_IMAGE_TAG_GITLAB_RUNNER}

#  sonarqube:
#    container_name: sonarqube
#    image: sonarqube:${DOCKER_IMAGE_TAG_SONARQUBE}

#  jenkins:
#    container_name: jenkins
#    image: jenkins/jenkins:${DOCKER_IMAGE_TAG_JENKINS}

#  redmine:
#    container_name: redmine
#    image: redmine:${DOCKER_IMAGE_TAG_REDMINE}

  postgres_gitlab:
    container_name: postgres_gitlab
    image: postgres:${DOCKER_IMAGE_TAG_POSTGRES}
    expose:
      - '5432'
    secrets:
      - source: postgres_postgres_password
        target: postgres_password
        uid: '999'
        gid: '999'
        mode: 0400
      - source: postgres_gitlab_password
        target: gitlab_password
        uid: '999'
        gid: '999'
        mode: 0400
    configs:
      - source: postgres_gitlab_init_user_db_sh
        target: /docker-entrypoint-initdb.d/init_user_db.sh
        uid: '0'
        gid: '0'
        mode: 0555
#    volumes:
#      - type: bind
#        source: '${GITLAB_HOME}/data/postgresql'
#        target: '/var/lib/postgresql/data'
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
#      PGDATA: /var/lib/postgresql/data/pgdata
    networks:
      - gitlab-postgres
    restart: always

secrets:
  ssl_certificate:
    file: ${DEVOPS_PROJECT_RESOURCES_DIR}/certificates/${SERVER_CERTIFICATE}
  ssl_certificate_key:
    file: ${DEVOPS_PROJECT_RESOURCES_DIR}/certificates/${SERVER_CERTIFICATE_KEY}
  gitlab_initial_root_password:
    file: ${DEVOPS_PROJECT_RESOURCES_DIR}/passwords/gitlab/initial_root_password.txt
  gitlab_postgres_password:
    file: ${DEVOPS_PROJECT_RESOURCES_DIR}/passwords/gitlab/postgres_password.txt
  postgres_postgres_password:
    file: ${DEVOPS_PROJECT_RESOURCES_DIR}/passwords/postgres/postgres_password.txt
  postgres_gitlab_password:
    file: ${DEVOPS_PROJECT_RESOURCES_DIR}/passwords/postgres/gitlab_password.txt

configs:
  nginx_default_conf_placeholder:
    file: ./services/nginx/configs/default.conf.placeholder
  nginx_envsubst_default_conf_placeholder_sh:
    file: ./services/nginx/configs/envsubst_default_conf_placeholder.sh
  nginx_index_html:
    file: ./services/nginx/configs/index.html
  gitlab_gitlab_rb_placeholder:
    file: ./services/gitlab/configs/gitlab.rb.placeholder
  gitlab_pre_reconfigure_script_sh:
    file: ./services/gitlab/configs/pre_reconfigure_script.sh
  gitlab_post_reconfigure_script_sh:
    file: ./services/gitlab/configs/post_reconfigure_script.sh
  postgres_gitlab_init_user_db_sh:
    file: ./services/postgres_gitlab/configs/init_user_db.sh

networks:
  nginx-gitlab:
  gitlab-postgres:

